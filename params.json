{"name":"Avalon (A)","tagline":"A Js lib to add 3d effect to web pages","body":"# Avalon(A) — Bring deepness to your web apps\r\n\r\n*version: 0.10.2*\r\n\r\n\r\n**Avalon(A)** allows you to easily add 3d to a set of html elements to simulate a deepness effect *([see jsFiddle preview](http://jsfiddle.net/K3kPx/5/show))*. To make this 3d effect noticeable, all html elements pertaining to the `transformed layer` *(basically the root container to which the 3d effect get applied to)* - rotate on their x and y axis according to mouse movements.\r\n\r\n# Summary\r\n- [Dependencies](#dependencies)\r\n- [Example](#example)\r\n\t- [Html](#html)\r\n\t- [Script](#script)\r\n- [API](#api)\r\n\t- [Constructor options](#constructorOptions)\r\n\t- [Methods](#methods)\r\n\t- [Events](#events)\r\n- [Plugins](#plugins)\r\n\t- [AvalonAnimation](#avalonAnimation)\r\n\t\t- [Balance](#balance)\r\n\t\t- [Spotlight](#spotlight)\r\n- [SpeedTester utility](#speedTesterUtility)\r\n- [Browser compatibility](#browserCompatibility)\r\n- [Using it with require.js](#usingRequireJS)\r\n- [Preview](#preview)\r\n\r\n# <a name=\"dependencies\"></a> Dependencies\r\n- [GSAP 1.9.2+](http://www.greensock.com) *(GreenSock Animation Platform)* **TweenLite** and **CSSPlugin** modules\r\n\r\n# <a name=\"example\"></a> Example\r\n## <a name=\"html\"></a> Html\r\n\t<div id=\"frame-3d\"> <!-- 3d Frame -->\r\n    \t<div id=\"avalona-inner-frame\"> <!-- transformed layer -->\r\n        \t<div id=\"half-circle\" data-avalonA-transform=\"z:-300\"></div>\r\n        \t\t<div id=\"square\" data-avalonA-transform=\"z:75; rx:20.32; ry:5; rz:-10.2\">\r\n            \t\t<div id=\"inner-square\" data-avalonA-transform=\"z:150\"></div>\r\n        \t\t</div>\r\n        \t<div id=\"circle\" data-avalonA-transform=\"z:200;rx:45\"></div>\r\n    \t</div>\r\n\t</div>\r\n\r\nIt is mandatory to have at least the `3d Frame` and `transformed layer` defined when **Avalon(A)** initialization occurs. Within the `3d Frame`, the element div having the id `avalona-inner-frame` becomes the `transformed layer`.\r\n\r\n`data-avalonA-transform` attribute value has the following structure:\r\n\r\n**z: z translation; rx: x rotation; ry: y rotation; rz: z rotation**\r\n\r\nAll properties are optional.\r\n\r\n## <a name=\"script\"></a> Script\r\n    $(function(){\r\n        AvalonA('frame-3d', 'avalona-inner-frame').start();\r\n    });\r\n\r\n# <a name=\"api\"></a> API\r\n## <a name=\"constructorOptions\"></a> Constructor options\r\nIt is possible to pass an object along with the id of the `3d Frame` to set options:\r\n\r\n    $(function(){\r\n        AvalonA('frame-3d', 'avalona-inner-frame', {option: value}).start();\r\n    });\r\n\r\n##### *tAttr*\r\nChanges the name of the attribute used to define layer **z translation**. Default value is `data-avalonA-transform`.\r\n\r\n##### *fy*\r\nA function that affects the amount of rotation triggered by the mouse movements on the **y axis**.\r\n\r\n\tAvalonA('frame-3d', 'avalona-inner-frame', {fy: function(rotation){\r\n\t\treturn rotation * 2;\r\n\t} }).start();\r\n\r\nDefault function as no effect on the rotation value.\r\n\r\n##### *fx*\r\nA function that affects the amount of rotation triggered by the mouse movements on the **x axis**. Default function as no effect on the rotation value.\r\n\r\n##### *activeArea*\r\nWhen available, restrict mouse movements tracking to this area: moving outside the area reset the `transformed layer` rotation.\r\n\r\n\tvar options = {\r\n\t\tactiveArea: {\r\n\t\t\tposition: {\r\n\t\t\t\tx: 'auto',\r\n\t\t\t\ty: '15%'\r\n\t\t\t},\r\n\t\t\tattachment: 'scroll',\r\n\t\t\twidth: '150px',\r\n\t\t\theight: 100\r\n\t\t}\r\n\t};\r\n\tAvalonA('frame-3d', 'avalona-inner-frame', options).start();\r\n\r\nEnable the `debug` option to display the area *( for development purpose only )*.\r\n\r\n##### *activeArea.width*\r\n\r\n- numeric like `200`\r\n- length like `'200px'`\r\n- percent like `'30%'`\r\n\r\n##### *activeArea.height*\r\n\r\n- numeric like `100`\r\n- length like `'100px'`\r\n- percent like `'20%'`\r\n\r\n\r\n##### *[activeArea.position]*\r\nSet the position of the area. Possible values:\r\n\r\n- `'auto'` means that the area will be centered within the browser window. ***(default)***\r\n- `{x: value, y: value}` where ***value*** can be\r\n\t- `null`\r\n\t- `'auto'`\r\n\t- numeric\r\n\t- length\r\n\t- percent\r\n\r\n##### *[activeArea.attachment]*\r\nAct like css `position: absolute|fixed`. Possible values:\r\n\r\n- `'fixed'` same as css `position: fixed`. ***(default)***\r\n- `'scroll'` like css `position: absolute`, the area will scroll along with the `transformed layer`\r\n\r\n##### *animation*\r\nAnimates the `transformed layer` when mouse is outside the active area *– meaning the actual `activeArea` or simply the `3d Frame` when no `activeArea` is provided*. The animation plays as well when the mouse is iddle.\r\n\r\nThe `animation` object must have the following api:\r\n\r\n\tanimation: {\r\n\r\n\t\tplay: function(transformedLayer){\r\n\t\t\t// animation code goes here\r\n\t\t},\r\n\r\n\t\tpause: function(){\r\n\t\t\t// pause code goes here\r\n\t\t}\r\n\t}\r\n\r\nAs the example shows, the `play()` method received as first argument the `transformed layer`, thus one can animate any attribute of this element *– not just the rotation*.\r\n\r\n##### *idleTimeout*\r\nThe delay, in milliseconds, after which the user is considered idle when there is no mouse movements:\r\n\r\n- Default value is **1000**\r\n- **0** is equivalent to default\r\n- Any negative value means ***infinite***\r\n\r\nWhen the user is idle, the animation resumes *– if any –* and `endrotation` event is triggered.\r\n\r\n\r\n##### *debug*\r\nEnable debug logs and display when set to `true`.\r\n\r\n## <a name=\"methods\"></a> Methods\r\n##### *refresh()*\r\nFetch `3d Frame` and `transformed layer` from the DOM and apply initial setup.\r\n\r\n##### *start()*\r\nAlias for ***refresh()***.\r\n\r\n##### *enable()*\r\nAlias for ***refresh()***.\r\n\r\n##### *disable()*\r\nFlatten `transformed layer`, remove mouse movement tracking, unable events and pause animation.\r\n\r\n##### *refreshTransform( [target : selector OR html node] )*\r\nUpdate **z translation** according to new values of `data-avalonA-transform`.\r\nWhen **target** is provided, only matching html nodes get updated.\r\n\r\n## <a name=\"events\"></a> Events\r\nIt is possible to add event listeners like this\r\n\r\n\tvar options = {\r\n    \ton: {\r\n    \t\tevent: function(){ /* event code goes here */ },\r\n    \t}\r\n\t};\r\n\tAvalonA('frame-3d', 'avalona-inner-frame', options).start();\r\n\r\nor this\r\n\r\n\tvar a = AvalonA('frame-3d', 'avalona-inner-frame', options);\r\n\ta.onevent = function(){ /* event code goes here */ };\r\n\ta.start();\r\n\r\nAvailable events:\r\n\r\n##### *startrotation*\r\nTriggered when `transformed layer` rotation starts.\r\n\r\n##### *endrotation*\r\nTriggered when `transformed layer` rotation ends.\r\n\r\n# <a name=\"plugins\"></a> Plugins\r\n## <a name=\"avalonAnimation\"></a> AvalonAnimation\r\nProvides a collection of preset animations.\r\n\r\n### <a name=\"balance\"></a> Balance\r\nAdds a balancing movement between two rotation angles.\r\n\r\n###### *Dependencies*\r\n\r\n- [GSAP 1.9.2+](http://www.greensock.com) *(GreenSock Animation Platform)* **TweenMax** module\r\n\r\nNote that the **TweenMax** module includes the **TweenLite** one *– see [GSAP](http://www.greensock.com) documentation for details*.\r\n\r\n###### *Examples*\r\n*Example 1*\r\n\r\n\tanimation: AvalonAnimation.Balance()\r\n\r\n*Example 2*\r\n\r\n\tanimation: AvalonAnimation.Balance({\r\n      duration: 0.75,\r\n\r\n      from:{\r\n        rx: 30,\r\n        ry: -30\r\n      },\r\n\r\n      to:{\r\n        rx: -90,\r\n        ry: 30\r\n      }\r\n    })\r\n\r\n###### *Options*\r\n\r\n- duration *(seconds)* – ***default value is 2.75***\r\n- from: { rx: *< rotation on X axis >*, ry: *< rotation on Y axis >* } – ***default value is { rx: 0 , ry: -20 }***\r\n- to: { rx: *< rotation on X axis >*, ry: *< rotation on Y axis >* } – ***default value is the negative version of `from`***\r\n\r\n### <a name=\"spotlight\"></a> Spotlight\r\nRotates like a spotlight.\r\n\r\n###### *Dependencies*\r\n\r\n- [GSAP 1.9.2+](http://www.greensock.com) *(GreenSock Animation Platform)* **TweenMax** and **BezierPlugin** modules\r\n\r\nNote that the **TweenMax** module includes the **TweenLite** and **BezierPlugin** ones *– see [GSAP](http://www.greensock.com) documentation for details*.\r\n\r\n###### *Examples*\r\n*Example 1*\r\n\r\n\tanimation: AvalonAnimation.Spotlight()\r\n\r\n*Example 2*\r\n\r\n\tanimation: AvalonAnimation.Spotlight({\r\n      duration: 5,\r\n      direction: 'ccw',\r\n      angle: 10\r\n    })\r\n\r\n###### *Options*\r\n\r\n- duration *(seconds)* – ***default value is 8***\r\n- direction `'cw'` *(clockwise)* or `'ccw'` *(counter-clockwise)* – ***default value is 'cw'***\r\n- angle – ***default value is 20***\r\n\r\n# <a name=\"speedTesterUtility\"></a> SpeedTester utility\r\nThe **SpeedTester** *(SpeedTester.min.js)* allows you to check system performance before activating **Avalon(A)**, thus preventing to undermine the usability of your website. It is meant to be used like this:\r\n\r\n*Main html document – preferably before loading any other scripts*\r\n\r\n\t<script>\r\n    \tvar speedTester = new SpeedTester(< how many times the test must be run (default 1) >);\r\n    \tspeedTester.run();\r\n\t</script>\r\n\r\n*Main script – after document as been loaded*\r\n\r\n\tspeedTester.oncomplete(function(results){\r\n\t\tif(results.fps > 30){\r\n\t\t\tAvalonA('frame-3d', 'avalona-inner-frame').start();\r\n\t\t}else{\r\n\t\t\tconsole.warn('Your frame rate is too low, recommended: 30');\r\n\t\t}\r\n\t});\r\n\r\n# <a name=\"browserCompatibility\"></a> Browser compatibility\r\n- Safari\r\n- Chrome\r\n- Firefox\r\n\r\n*Nothing happens on browsers that doesn't support 3d transform.*\r\n\r\n# <a name=\"usingRequireJS\"></a> Using it with require.js\r\n**Avalon(A)** is AMD compliant: if **require.js** is present, `AvalonA` function won't be exposed as a global variable but as a module having the same name.\r\nThe same goes for `AvalonAnimation` plugin and `SpeedTester` utility.\r\n\r\nAs an AMD module, `AvalonA` requires `jquery` and `tweenlite` modules. `AvalonAnimation` requires `tweenmax`,`tweenlite` and `GSEases`modules, where `GSEases` contains key/value pairs of standard greensock easing functions — *the ones bundled with TweenMax*.\r\n\r\n#### GreenSock specifics\r\nKeep in mind that since GreenSock bundles several modules within one file — *indeed TweenMax file contains TweenMax as well as TweenLite, CSSPlugin, BezierPlugin, Eeasin, etc* — it needs special care to be used with **require.js**.\r\n\r\nCheck out this [code sample](https://raw.github.com/janouma/AvalonA/master/dist/avalona-amd-test.zip) to understand how to use **Avalon(A)** and **GreenSock** with **require.js**.\r\n\r\n\r\n# <a name=\"preview\"></a> Preview\r\n**[see jsFiddle preview](http://jsfiddle.net/K3kPx/5/show)**\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}